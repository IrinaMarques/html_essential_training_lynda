==========================
Exploring an HTML document
==========================

Browsers gives us instuments to inspect the webpages:
IE - Developer tools
Firefox - Firebug
Chrome - Webkit Inspector

For building a document we need:
* <!DOCTYPE HTML>  version of HTML we are using
* <html></html>  all elements are inside
Two regions:
* <head></head>  
What makes the html better but don't define it. 
Non visual elements that makes the page/document work.
We have: scripts, css files that styles the page, meta tags, title for accessibility.
* <body></body>  
All the visual elements 
We have: h1, main content, sidebars, footers, paragraphs

====================
DOCTYPE Declarations
====================

http://www.w3.org/QA/2002/04/valid-dtd-list.html

Doctype tells the browser which version of html we are going to use. 

Trigger the quirks mode ensures that the page is going to be rendered properly.

The one that we need is:
<!DOCTYPE HTML>

=================
The Document head
=================

Place information about the document:
* external scripts
* meta tags
* styles
* addicional instructions to the browser how the document should be rendered

<!Doctype html>
<html>
<head>
<meta>
<title></title>
</head>
</html>

=================
The Document body 
=================

All the visible content.
Inside it can contain:

<body>
<h1></h1>
<p><b></b></p>
</body>

=============================
Understanding content models 
=============================

Http://www.w3.org/TR/html5/dom.html#kinds-of-content

Almost every element in HTML belong to at least one content model

Content Models: These define the type of content expected inside an element and control syntax rules such as element nesting. 

* Block level: Block level elements take up their own line within the flow of the document.

* Inline: Inline level elements basically appear within the flow of other content.

* Flow: contains the majority of the elements in HTML5 - elements that will be included in the normal flow of the document

* Metadata: base, link, meta, noscript, script, style, title

* Embedded: any content that imports other resources into the document - audio, canvas, embed iframe, img, math, object, svg, video

* Interactive: specifically intended for some type of user interaction - a, audio, button, iframe, img, input, keygen, label, object, select, textarea, video

* Heading: defines the header of a section - h1, h2, h3, h4, h5, h6

* Phrasing: text of a document, as well as any element that are used to - a, abbr, area, audio, b, bdi, br, button, canvas, cite, code, data, date, datalist, del, dfn, em, i, iframe, img, input, ins, kbd, keygen, label, map, mark, math, meter, noscript, object, output, progress, q, ruby, s, samp, script, small, span, strong, sub, sup, svg, textarea, time, u,var, video,wbr, text

* Sectioning: defines the scope of the headings and footers, create a new section within the document - article, aside, nav, section




